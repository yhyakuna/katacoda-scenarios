{
  "version": 4,
  "terraform_version": "0.12.28",
  "serial": 15,
  "lineage": "bbc1bd63-4899-b6b8-497d-ae8838453ae2",
  "outputs": {
    "encoded": {
      "value": "6754-4542-1216-8423",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "vault_transform_encode",
      "name": "encoded",
      "provider": "provider.vault",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "batch_input": null,
            "batch_results": [],
            "encoded_value": "6754-4542-1216-8423",
            "id": "/transform/encode/payments",
            "path": "transform",
            "role_name": "payments",
            "transformation": null,
            "tweak": null,
            "value": "1111-2222-3333-4444"
          }
        }
      ]
    },
    {
      "mode": "managed",
      "type": "vault_auth_backend",
      "name": "userpass",
      "provider": "provider.vault",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "accessor": "auth_userpass_873e539e",
            "default_lease_ttl_seconds": 0,
            "description": "",
            "id": "userpass",
            "listing_visibility": "",
            "local": false,
            "max_lease_ttl_seconds": 0,
            "path": "userpass",
            "tune": [],
            "type": "userpass"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "vault_generic_endpoint",
      "name": "student",
      "provider": "provider.vault",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "data_json": "{\"password\":\"changeme\",\"policies\":[\"admins\",\"fpe-client\"]}",
            "disable_delete": false,
            "disable_read": false,
            "id": "auth/userpass/users/student",
            "ignore_absent_fields": true,
            "path": "auth/userpass/users/student",
            "write_data": {},
            "write_data_json": "null",
            "write_fields": null
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "vault_auth_backend.userpass"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "vault_mount",
      "name": "kv-v2",
      "provider": "provider.vault15.finance",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "accessor": "kv_2dd370db",
            "default_lease_ttl_seconds": 0,
            "description": "",
            "external_entropy_access": false,
            "id": "kv-v2",
            "local": false,
            "max_lease_ttl_seconds": 0,
            "options": null,
            "path": "kv-v2",
            "seal_wrap": false,
            "type": "kv-v2"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "vault_namespace.finance"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "vault_mount",
      "name": "mount_transform",
      "provider": "provider.vault",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "accessor": "transform_fbfcec80",
            "default_lease_ttl_seconds": 0,
            "description": "",
            "external_entropy_access": false,
            "id": "transform",
            "local": false,
            "max_lease_ttl_seconds": 0,
            "options": null,
            "path": "transform",
            "seal_wrap": false,
            "type": "transform"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "vault_namespace",
      "name": "engineering",
      "provider": "provider.vault",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "engineering/",
            "namespace_id": "MiF4L",
            "path": "engineering"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "vault_namespace",
      "name": "finance",
      "provider": "provider.vault",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "finance/",
            "namespace_id": "d5572",
            "path": "finance"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "vault_policy",
      "name": "admin_policy",
      "provider": "provider.vault",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "admins",
            "name": "admins",
            "policy": "# Manage auth methods broadly across Vault\npath \"auth/*\"\n{\n  capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\"]\n}\n\n# Create, update, and delete auth methods\npath \"sys/auth/*\"\n{\n  capabilities = [\"create\", \"update\", \"delete\", \"sudo\"]\n}\n\n# List auth methods\npath \"sys/auth\"\n{\n  capabilities = [\"read\"]\n}\n\n# Create and manage ACL policies\npath \"sys/policies/acl/*\"\n{\n  capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\"]\n}\n\n# List ACL policies\npath \"sys/policies/acl\"\n{\n  capabilities = [\"list\"]\n}\n\n# Create and manage secrets engines broadly across Vault.\npath \"sys/mounts/*\"\n{\n  capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\"]\n}\n\n# List enabled secrets engines\npath \"sys/mounts\"\n{\n  capabilities = [\"read\", \"list\"]\n}\n\n# List, create, update, and delete key/value secrets at secret/\npath \"secret/*\"\n{\n  capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\"]\n}\n\n# Manage transit secrets engine\npath \"transit/*\"\n{\n  capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\"]\n}\n\n# Read health checks\npath \"sys/health\"\n{\n  capabilities = [\"read\", \"sudo\"]\n}\n"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "vault_policy",
      "name": "admin_policy_engineering",
      "provider": "provider.vault15.engineering",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "admins",
            "name": "admins",
            "policy": "# Manage auth methods broadly across Vault\npath \"auth/*\"\n{\n  capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\"]\n}\n\n# Create, update, and delete auth methods\npath \"sys/auth/*\"\n{\n  capabilities = [\"create\", \"update\", \"delete\", \"sudo\"]\n}\n\n# List auth methods\npath \"sys/auth\"\n{\n  capabilities = [\"read\"]\n}\n\n# Create and manage ACL policies\npath \"sys/policies/acl/*\"\n{\n  capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\"]\n}\n\n# List ACL policies\npath \"sys/policies/acl\"\n{\n  capabilities = [\"list\"]\n}\n\n# Create and manage secrets engines broadly across Vault.\npath \"sys/mounts/*\"\n{\n  capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\"]\n}\n\n# List enabled secrets engines\npath \"sys/mounts\"\n{\n  capabilities = [\"read\", \"list\"]\n}\n\n# List, create, update, and delete key/value secrets at secret/\npath \"secret/*\"\n{\n  capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\"]\n}\n\n# Manage transit secrets engine\npath \"transit/*\"\n{\n  capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\"]\n}\n\n# Read health checks\npath \"sys/health\"\n{\n  capabilities = [\"read\", \"sudo\"]\n}\n"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "vault_namespace.engineering"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "vault_policy",
      "name": "admin_policy_finance",
      "provider": "provider.vault15.finance",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "admins",
            "name": "admins",
            "policy": "# Manage auth methods broadly across Vault\npath \"auth/*\"\n{\n  capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\"]\n}\n\n# Create, update, and delete auth methods\npath \"sys/auth/*\"\n{\n  capabilities = [\"create\", \"update\", \"delete\", \"sudo\"]\n}\n\n# List auth methods\npath \"sys/auth\"\n{\n  capabilities = [\"read\"]\n}\n\n# Create and manage ACL policies\npath \"sys/policies/acl/*\"\n{\n  capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\"]\n}\n\n# List ACL policies\npath \"sys/policies/acl\"\n{\n  capabilities = [\"list\"]\n}\n\n# Create and manage secrets engines broadly across Vault.\npath \"sys/mounts/*\"\n{\n  capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\"]\n}\n\n# List enabled secrets engines\npath \"sys/mounts\"\n{\n  capabilities = [\"read\", \"list\"]\n}\n\n# List, create, update, and delete key/value secrets at secret/\npath \"secret/*\"\n{\n  capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\"]\n}\n\n# Manage transit secrets engine\npath \"transit/*\"\n{\n  capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\"]\n}\n\n# Read health checks\npath \"sys/health\"\n{\n  capabilities = [\"read\", \"sudo\"]\n}\n"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "vault_namespace.finance"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "vault_policy",
      "name": "fpe_client_policy",
      "provider": "provider.vault",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "fpe-client",
            "name": "fpe-client",
            "policy": "# To request data encoding using any of the roles\n# Specify the role name in the path to narrow down the scope\npath \"transform/encode/*\" {\n   capabilities = [ \"update\" ]\n}\n\n# To request data decoding using any of the roles\n# Specify the role name in the path to narrow down the scope\npath \"transform/decode/*\" {\n   capabilities = [ \"update\" ]\n}\n"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "vault_transform_alphabet",
      "name": "numerics",
      "provider": "provider.vault",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alphabet": "0123456789",
            "id": "/transform/alphabet/numerics",
            "name": "numerics",
            "path": "transform"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "vault_mount.mount_transform"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "vault_transform_role",
      "name": "payments",
      "provider": "provider.vault",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "/transform/role/payments",
            "name": "payments",
            "path": "transform",
            "transformations": [
              "ccn-fpe"
            ]
          },
          "private": "bnVsbA==",
          "dependencies": [
            "vault_mount.mount_transform",
            "vault_transform_alphabet.numerics",
            "vault_transform_template.ccn",
            "vault_transform_transformation.ccn-fpe"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "vault_transform_template",
      "name": "ccn",
      "provider": "provider.vault",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alphabet": "numerics",
            "id": "/transform/template/ccn",
            "name": "ccn",
            "path": "transform",
            "pattern": "(\\d{4})-(\\d{4})-(\\d{4})-(\\d{4})",
            "type": "regex"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "vault_mount.mount_transform",
            "vault_transform_alphabet.numerics"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "vault_transform_transformation",
      "name": "ccn-fpe",
      "provider": "provider.vault",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_roles": [
              "payments"
            ],
            "id": "/transform/transformation/ccn-fpe",
            "masking_character": null,
            "name": "ccn-fpe",
            "path": "transform",
            "template": "ccn",
            "templates": [
              "ccn"
            ],
            "tweak_source": "internal",
            "type": "fpe"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "vault_mount.mount_transform",
            "vault_transform_alphabet.numerics",
            "vault_transform_template.ccn"
          ]
        }
      ]
    }
  ]
}
